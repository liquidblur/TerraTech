# Configuration file

general {
    # Enable dark theme for some of the GUIs. [default: true]
    B:dark_theme=true

    # Should the Debug mode of Taam be activated? Enables some extra output to debug what is going on. [default: false]
    B:debug_output=false

    # Reroute debug output to INFO level? [default: false]
    B:debug_output_as_info=false

    # Enable or disable rendering of items on machines. Troubleshooting only; should remain enabled, else conveyors et. al. will always look empty. [default: true]
    B:render_items=true

    # Enable or disable rendering of tank content. Troubleshooting only; should remain enabled, else tanks et. al. will always look empty. [default: true]
    B:render_tank_content=true

    # Enable or disable compatibility for IInventory. If enabled, IInventory will be wrapped in IItemHandler etc. [default: true]
    B:use_iinventory_compat=true
}


integration {

    multipart {
        # Load machines as multiparts if McMultipart is found. [default: true]
        B:load_multiparts=true

        # Allows you to disable registering of the multipart-variants of the items. Setting this to false means that multiparts will load without an issue, but all new machines will be created as full blocks and not as multiparts. [default: true]
        B:register_multipart_items=true
    }

    jei {
        # Enable or disable rendering the machine into the recipe display in JEI. For troubleshooting only; you should leave this enabled normally. [default: true]
        B:render_machines_into_gui=true
    }

}


multitronix {

    sensor {
        # Sensor [Motion, Minect] placement mode when side by side. 1 = move together, 2 = merge into one [range: 1 ~ 2, default: 1]
        I:placement_mode=1

        # Sensor [Motion, Minect] delay (minimum activation time) in game ticks, minimum 10 [range: 10 ~ 100, default: 30]
        I:sdelay=30
    }

}


production_line {

    trashcan {
        # Maximum fill level of trashcans. This counts stacks. (Fill Level 1 == 1 stack and it is full) [range: 1.0 ~ 3.4028235E38, default: 64.0]
        S:maxfill=64.0
    }

    conveyors {
        # Blacklist for items that cannot be put on a conveyor (and similar machines) by right clicking. Use this to prevent accidentally losing wrench-like items or similar use cases. [default: taam:wrench;taam:productionline;taam:part@16;taam:productionline_attachable;taam:productionline_appliance]
        S:rightclick_blacklist=taam:wrench;taam:productionline;taam:part@16;taam:productionline_attachable;taam:productionline_appliance

        # Speedsteps (1/speed) for tier 1 conveyors (wooden) [range: 1 ~ 127, default: 80]
        I:speedsteps_1=80

        # Speedsteps (1/speed) for tier 2 conveyors (aluminum) [range: 1 ~ 127, default: 40]
        I:speedsteps_2=40

        # Speedsteps (1/speed) for tier 3 conveyors (high throughput) [range: 1 ~ 127, default: 5]
        I:speedsteps_3=5

        # !!Performance critical!! Keep this value low! Determines, how many blocks away a conveyor can be supported by other conveyors in the same direction. [range: 0 ~ 2147483647, default: 2]
        I:supportrange=2
    }

    hopper {
        # Drop Delay (ticks) for the conveyor hopper. [range: 1 ~ 500, default: 8]
        I:delay=8

        # Drop Delay (ticks) for the high-speed conveyor hopper. [range: 1 ~ 500, default: 0]
        I:highspeed_delay=0

        # Disabling this makes the High-Speed Hoppers eject in 'slow' speed when in stack-mode. (Same delay as the regular conveyor hopper) [default: true]
        B:stackmode_normal_speed=true
    }

    processors {
        # Ticks between each processed item in the conveyor crusher. [range: 1 ~ 200, default: 15]
        I:crusher_timeout=15

        # Ticks between each processed item in the conveyor grinder. [range: 1 ~ 200, default: 15]
        I:grinder_timeout=15

        # Decides, whether standing on conveyor processors (Grinder, Crusher, Shredder) should hurt players/NPCs. [default: true]
        B:hurt=true

        # The likelyhood of being hurt by a processor. Calculated every tick. [range: 1.0E-5 ~ 1.0, default: 0.2]
        S:hurt_chance=0.2

        # Ticks between each shredded item in the conveyor shredder. [range: 1 ~ 200, default: 1]
        I:shredder_timeout=1
    }

    elevator {
        # Speedsteps (1/speed) for conveyor elevators. [range: 1 ~ 127, default: 30]
        I:speedsteps=30
    }

    sieve {
        # Speedsteps (1/speed) for conveyor sieves. [range: 1 ~ 127, default: 20]
        I:speedsteps=20
    }

    fluiddrier {
        # Capacity of the pipe end of the fluid drier. Keep in mind that lowering this too much can make some recipes impossible! Unit: mB
        I:capacity=1000

        # Ticks between each processed item in the fluid drier. [range: 1 ~ 200, default: 50]
        I:timeout=50
    }

    mixer {
        # Capacity of the input pipe end of the mixer. Keep in mind that lowering this too much can make some recipes impossible! Unit: mB
        I:capacity_input=2000

        # Capacity of the output pipe end of the mixer. Does not accect recipes, only output speed & loss when breaking the block. Unit: mB
        I:capacity_output=2000

        # Ticks between each processed item in the mixer. [range: 1 ~ 200, default: 15]
        I:timeout=15
    }

    pipe {
        # Capacity of the pipes. Higher capacity means higher loss when breaking a pipe, but also faster transfer of fluids. Unit: mB
        I:capacity=500

        # Absolute maximum pressure a pipe can hold. Applies to both positive and negative. [range: 1 ~ 2147483647, default: 500]
        I:max_pressure=500

        # Enable or disable pipes connecting to 'regular' IFluidHandler-based machines. Setting this to false makes pipes only connect to other pipes & pipe ends in machines. [default: true]
        B:wrap_ifluidhandler=true
    }

    pump {
        # Capacity of the pumps. Higher capacity means higher loss when breaking a pump, but also faster transfer of fluids. Unit: mB
        I:capacity=125

        # Pressure of the pumps. Higher pressure means higher output range.
        I:pressure=50
    }

    tank {
        # Capacity of the tanks. Higher capacity means higher loss when breaking a tank, but also more storage. Transfer rate is limited by connected pipe, not by the tank. Unit: mB
        I:capacity=8000

        # Suction of the tanks. Higher suction means higher input range. Suction on the lower end of the tank is always 1 lower than on the top, so stacked tanks always transfer down.
        I:suction=10
    }

    appliance_sprayer {
        # Capacity of the pipe end of the sprayer appliance. Keep in mind that lowering this too much can make some recipes impossible! Unit: mB
        I:capacity=2000
    }

}


worldgen {

    copper {
        # Should Taam generate Copper ore in the world? [default: true]
        B:generate=true

        # Copper ore veins spawn above this y-level [range: 0 ~ 255, default: 0]
        I:oreAbove=0

        # Copper ore veins spawn below this y-level [range: 0 ~ 255, default: 59]
        I:oreBelow=59

        # Number of Copper ore veins per chunk [range: 0 ~ 2147483647, default: 7]
        I:oreDepositCount=7

        # Size of Copper ore veins [range: 0 ~ 2147483647, default: 14]
        I:oreSize=14
    }

    tin {
        # Should Taam generate Tin ore in the world? [default: true]
        B:generate=true

        # Tin ore veins spawn above this y-level [range: 0 ~ 255, default: 0]
        I:oreAbove=0

        # Tin ore veins spawn below this y-level [range: 0 ~ 255, default: 59]
        I:oreBelow=59

        # Number of Tin ore veins per chunk [range: 0 ~ 2147483647, default: 7]
        I:oreDepositCount=7

        # Size of Tin ore veins [range: 0 ~ 2147483647, default: 13]
        I:oreSize=13
    }

    aluminum {
        # Should Taam generate Aluminum ore in the world? [default: true]
        B:generate=true

        # Aluminum ore veins spawn above this y-level [range: 0 ~ 255, default: 0]
        I:oreAbove=0

        # Aluminum ore veins spawn below this y-level [range: 0 ~ 255, default: 59]
        I:oreBelow=59

        # Number of Aluminum ore veins per chunk [range: 0 ~ 2147483647, default: 3]
        I:oreDepositCount=3

        # Size of Aluminum ore veins [range: 0 ~ 2147483647, default: 2]
        I:oreSize=2
    }

    bauxite {
        # Should Taam generate Bauxite ore in the world? [default: true]
        B:generate=true

        # Bauxite ore veins spawn above this y-level [range: 0 ~ 255, default: 0]
        I:oreAbove=0

        # Bauxite ore veins spawn below this y-level [range: 0 ~ 255, default: 128]
        I:oreBelow=128

        # Number of Bauxite ore veins per chunk [range: 0 ~ 2147483647, default: 10]
        I:oreDepositCount=10

        # Size of Bauxite ore veins [range: 0 ~ 2147483647, default: 35]
        I:oreSize=35
    }

    kaolinite {
        # Should Taam generate Kaolinite ore in the world? [default: true]
        B:generate=true

        # Kaolinite ore veins spawn above this y-level [range: 0 ~ 255, default: 0]
        I:oreAbove=0

        # Kaolinite ore veins spawn below this y-level [range: 0 ~ 255, default: 100]
        I:oreBelow=100

        # Number of Kaolinite ore veins per chunk [range: 0 ~ 2147483647, default: 5]
        I:oreDepositCount=5

        # Size of Kaolinite ore veins [range: 0 ~ 2147483647, default: 35]
        I:oreSize=35
    }

}


